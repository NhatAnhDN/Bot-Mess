import os from 'os';
import moment from 'moment-timezone';
import fs from 'fs';
const config = {
  name: "upt",
  version: "2.0.0",
  hasPermission: 0,
  credits: "Vtuan",
  description: "Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng c·ªßa bot",
  commandCategory: "H·ªá Th·ªëng",
  usages: "",
  cooldowns: 5
};


function getStatusByPing(ping) {
  if (ping < 200) {
    return 'T·ªët';
  } else if (ping < 800) {
    return 'B√¨nh th∆∞·ªùng';
  } else {
    return 'X·∫•u';
  }
}
function getPrimaryIP() {
  const interfaces = os.networkInterfaces();
  for (let iface of Object.values(interfaces)) {
    for (let alias of iface) {
      if (alias.family === 'IPv4' && !alias.internal) {
        return alias.address;
      }
    }
  }
  return '127.0.0.1'; 
}

async function onCall({ message }) {
  const totalMemory = os.totalmem();
  const freeMemory = os.freemem();
  const usedMemory = totalMemory - freeMemory;
  const uptime = process.uptime();
  const primaryIp = getPrimaryIP();
  const botStatus = getStatusByPing(Date.now() - message.timestamp);

  const uptimeHours = Math.floor(uptime / (60 * 60));
  const uptimeMinutes = Math.floor((uptime % (60 * 60)) / 60);
  const uptimeSeconds = Math.floor(uptime % 60);

  const uptimeString = `${uptimeHours.toString().padStart(2, '0')}:${uptimeMinutes.toString().padStart(2, '0')}:${uptimeSeconds.toString().padStart(2, '0')}`;

  // Formatted message including CPU and RAM details, similar to Replit's standards.
  const replyMsg = `
    ñ¢® ¬∑ B√¢y gi·ªù l√†: ${moment().tz('Asia/Ho_Chi_Minh').format('HH:mm:ss')} || ${moment().tz('Asia/Ho_Chi_Minh').format('DD/MM/YYYY')}
    ñ¢® ¬∑ Th·ªùi gian ƒë√£ ho·∫°t ƒë·ªông: ${uptimeString}
    ñ¢® ¬∑ Prefix m·∫∑c ƒë·ªãnh: ${global.config.PREFIX}
    ñ¢® ¬∑ ƒê·ªãa ch·ªâ IP: ${primaryIp}
    ñ¢® ¬∑ T√¨nh tr·∫°ng bot: ${botStatus}
    ñ¢® ¬∑ Th√¥ng tin h·ªá th·ªëng:
      - H·ªá ƒëi·ªÅu h√†nh: ${os.type()} ${os.release()} (${os.arch()})
      - CPU: ${os.cpus().length} core(s) - ${os.cpus()[0].model.trim()} @ ${os.cpus()[0].speed}MHz
      - RAM: ${(usedMemory / 1024 / 1024 / 1024).toFixed(2)}GB/${(totalMemory / 1024 / 1024 / 1024).toFixed(2)}GB (Used/Total)
      - Dung l∆∞·ª£ng tr·ªëng: ${(freeMemory / 1024 / 1024 / 1024).toFixed(2)}GB
    ñ¢® ¬∑ Ping: ${Date.now() - message.timestamp}ms
  `.trim();

  api.sendMessage(replyMsg, message.threadID, message.messageID);
};
export default {
  config,
  onCall
};
